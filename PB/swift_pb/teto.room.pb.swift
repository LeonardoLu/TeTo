// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: teto.room.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct TeToRoom_RoomInfo {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var name: String {
    get {return _name ?? String()}
    set {_name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  var hasName: Bool {return self._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  mutating func clearName() {self._name = nil}

  var hostID: String {
    get {return _hostID ?? String()}
    set {_hostID = newValue}
  }
  /// Returns true if `hostID` has been explicitly set.
  var hasHostID: Bool {return self._hostID != nil}
  /// Clears the value of `hostID`. Subsequent reads from it will return its default value.
  mutating func clearHostID() {self._hostID = nil}

  var action: TeToRoom_RoomInfo.Action {
    get {return _action ?? .start}
    set {_action = newValue}
  }
  /// Returns true if `action` has been explicitly set.
  var hasAction: Bool {return self._action != nil}
  /// Clears the value of `action`. Subsequent reads from it will return its default value.
  mutating func clearAction() {self._action = nil}

  var game: TeToRoom_RoomInfo.Game {
    get {return _game ?? .uno}
    set {_game = newValue}
  }
  /// Returns true if `game` has been explicitly set.
  var hasGame: Bool {return self._game != nil}
  /// Clears the value of `game`. Subsequent reads from it will return its default value.
  mutating func clearGame() {self._game = nil}

  var content: Data {
    get {return _content ?? Data()}
    set {_content = newValue}
  }
  /// Returns true if `content` has been explicitly set.
  var hasContent: Bool {return self._content != nil}
  /// Clears the value of `content`. Subsequent reads from it will return its default value.
  mutating func clearContent() {self._content = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Action: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case start // = 0
    case end // = 1

    init() {
      self = .start
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .start
      case 1: self = .end
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .start: return 0
      case .end: return 1
      }
    }

  }

  enum Game: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case uno // = 0

    init() {
      self = .uno
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .uno
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .uno: return 0
      }
    }

  }

  init() {}

  fileprivate var _name: String? = nil
  fileprivate var _hostID: String? = nil
  fileprivate var _action: TeToRoom_RoomInfo.Action? = nil
  fileprivate var _game: TeToRoom_RoomInfo.Game? = nil
  fileprivate var _content: Data? = nil
}

#if swift(>=4.2)

extension TeToRoom_RoomInfo.Action: CaseIterable {
  // Support synthesized by the compiler.
}

extension TeToRoom_RoomInfo.Game: CaseIterable {
  // Support synthesized by the compiler.
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension TeToRoom_RoomInfo: @unchecked Sendable {}
extension TeToRoom_RoomInfo.Action: @unchecked Sendable {}
extension TeToRoom_RoomInfo.Game: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "TeTo_Room"

extension TeToRoom_RoomInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".RoomInfo"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "hostID"),
    3: .same(proto: "action"),
    4: .same(proto: "game"),
    5: .same(proto: "content"),
  ]

  public var isInitialized: Bool {
    if self._name == nil {return false}
    if self._hostID == nil {return false}
    if self._action == nil {return false}
    if self._game == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self._name) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self._hostID) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self._action) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self._game) }()
      case 5: try { try decoder.decodeSingularBytesField(value: &self._content) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._name {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    } }()
    try { if let v = self._hostID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    } }()
    try { if let v = self._action {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 3)
    } }()
    try { if let v = self._game {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 4)
    } }()
    try { if let v = self._content {
      try visitor.visitSingularBytesField(value: v, fieldNumber: 5)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TeToRoom_RoomInfo, rhs: TeToRoom_RoomInfo) -> Bool {
    if lhs._name != rhs._name {return false}
    if lhs._hostID != rhs._hostID {return false}
    if lhs._action != rhs._action {return false}
    if lhs._game != rhs._game {return false}
    if lhs._content != rhs._content {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TeToRoom_RoomInfo.Action: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "START"),
    1: .same(proto: "END"),
  ]
}

extension TeToRoom_RoomInfo.Game: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNO"),
  ]
}
